@model Bubblevel_MatchService.Models.Customer

@{
  ViewData["Title"] = "Create";
  bool isModal = ViewData["isModal"] as bool? ?? false;
}

@if (!isModal)
{
<h1>Create</h1>
}

<h4>Customer</h4>
<hr />
<div class="row row-cols-1">
    <div class="col-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="isModal" value="@isModal" />
            <div class="form-group mt-4">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control w-100" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mt-4">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group form-check mt-4">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="HasActiveSupportPlan" /> @Html.DisplayNameFor(model => model.HasActiveSupportPlan)
                </label>
            </div>
            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@if (!isModal)
{
<div class="mt-4">
    <a asp-action="Index">Back to List</a>
</div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
