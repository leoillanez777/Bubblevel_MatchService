@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    string fullName = user != null ? user.FullName() : "Guest";
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            
        </li>
        <li class="nav-item dropdown dropstart">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="mdi mdi-account"></i>
            </a>
            <ul class="dropdown-menu">
                <li>
                    <a id="manage" class="dropdown-item text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@fullName</a>
                </li>
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index"><i class="mdi mdi-cog-outline me-2"></i>Setting</a></li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                        <button id="logout" type="submit" class="dropdown-item btn btn-link text-dark border-0"><i class="mdi mdi-logout"></i> Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
